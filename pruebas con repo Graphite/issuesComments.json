[
  {
    "number": 2827,
    "title": "Improve hotkeys with canonical flag, more industry-standard mappings, and fix GRS menu bar labels",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2827",
    "user": "Keavon",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-04T11:50:24Z",
    "updated_at": "2025-07-04T11:58:53Z",
    "closed_at": "2025-07-04T11:58:52Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "The `input_mappings.rs` entries now accept the `canonical` argument which should occur no more than once per action and it means that it should be the standard shortcut which hotkey labels and tooltips in the UI are generated for.    ---    Hotkeys were updated a bit to use slightly more common shortcuts, as well as aliases added for cases where people may be more familiar with an alternative key. In particular, we now reset the working colors with <kbd>D</kbd> which had not been used as a shortcut otherwise.    ---    These were missing which is now a fixed problem:    ![capture](https://github.com/user-attachments/assets/00f0444e-76c7-422e-bafd-83abcb97b911)"
  },
  {
    "number": 2826,
    "title": "Simplify properties sections",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2826",
    "user": "0HyperCube",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-03T22:43:43Z",
    "updated_at": "2025-07-03T22:43:43Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "- No empty merge section.  - Sections go in order from first applied to last applied."
  },
  {
    "number": 2825,
    "title": "Fix broken migration for `CoordinateValueNode`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2825",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-03T12:05:56Z",
    "updated_at": "2025-07-03T12:12:20Z",
    "closed_at": "2025-07-03T12:12:19Z",
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2824,
    "title": "Duplicate in Layers Panel with Alt+Drag",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2824",
    "user": "JulesDoe",
    "labels": [
      "Good First Issue",
      "Web",
      "Paper Cut"
    ],
    "assignee": "",
    "comments_count": 3,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-07-03T08:28:09Z",
        "body": "Great idea, I hadn't considered this but it's absolutely worth adding."
      },
      {
        "user": "aemreaydin",
        "created_at": "2025-07-03T21:10:10Z",
        "body": "I would love to take a look at this, if noone is working on it right now! It would be my first issue for Graphite, so any pointer is appreciated!"
      },
      {
        "user": "Keavon",
        "created_at": "2025-07-03T21:13:15Z",
        "body": "Go for it. Layers.svelte is the file."
      }
    ],
    "created_at": "2025-07-03T08:24:32Z",
    "updated_at": "2025-07-03T21:13:15Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Hi, for UX consitency i would suggest that a layer can be duplicated by Alt+Dragging it in the layerspanel.   not shure if this is to early to note some absolutely minor UX inconsitencys as there isnt a UX tag ... feel free to deleat :) i will come back later xD  Best and big thanks to all devs!"
  },
  {
    "number": 2823,
    "title": "Add new node \"Decimate\"",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2823",
    "user": "Moustafaa91",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-03T06:10:07Z",
    "updated_at": "2025-07-03T06:10:07Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Adding a new node \"Decimate\" which uses the Ramer-Douglas-Peucker algorithm"
  },
  {
    "number": 2822,
    "title": "Identity Node from Value Input",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2822",
    "user": "adamgerhant",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T23:10:12Z",
    "updated_at": "2025-07-03T00:22:26Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "When an exposed value input is clicked and dragged, an identity node with that same input is created, and connected to the node.    https://github.com/user-attachments/assets/9445df24-74cb-4c64-a919-8d2ebd453646    Essentially closes https://github.com/GraphiteEditor/Graphite/issues/2447    "
  },
  {
    "number": 2821,
    "title": "Separate glyphs into Vector data rows",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2821",
    "user": "BKSalman",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T21:09:51Z",
    "updated_at": "2025-07-03T21:19:20Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "This feature was [first mentioned in the Discord server](https://discord.com/channels/731730685944922173/1384222879885037608/1389540475979042898), and is being discussed on a [dedicated thread](https://discord.com/channels/731730685944922173/1389708273728622602)"
  },
  {
    "number": 2820,
    "title": "Yo",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2820",
    "user": "omid717",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T11:25:08Z",
    "updated_at": "2025-07-02T11:26:57Z",
    "closed_at": "2025-07-02T11:26:57Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "- [ ] > []()uea``"
  },
  {
    "number": 2819,
    "title": "Make MoldingSegment be a mode of Dragging versus its own PointerMove state",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2819",
    "user": "otdavies",
    "labels": [],
    "assignee": "4adex",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T09:33:11Z",
    "updated_at": "2025-07-02T09:37:13Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Take a look at path_tool.rs: ~line 1700 onward.   Overall: Dragging one handle versus two handles should be effectively the same code. Molding is just dragging two handles as opposed to one.  Due to migrating slide to GG, this should remove the other PointerMove that is really also part of the dragging state, but won't be after GG."
  },
  {
    "number": 2818,
    "title": "Path Tool behavior and overlay polish",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2818",
    "user": "otdavies",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T08:45:41Z",
    "updated_at": "2025-07-03T04:26:13Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "On going work to improve Path tool overlays and behavior.    Depends on #2794  Further work toward #2716  "
  },
  {
    "number": 2817,
    "title": "Add nodes for modifying vector paths",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2817",
    "user": "celyk",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-07-02T09:10:19Z",
        "body": "Blocked on attributes (custom table columns) in #1173."
      }
    ],
    "created_at": "2025-07-02T07:47:24Z",
    "updated_at": "2025-07-02T09:10:32Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Similar to how Instance Index and Instance Position input nodes work, but for paths. See for example Blender's Position Node: https://docs.blender.org/manual/en/latest/modeling/geometry_nodes/geometry/read/position.html  This will allow the displacement of points in a path. One should also be able to modify the color and weight along the path.  Proposed nodes: - Path Index - Path Position - Path Color - Path Weight  Each of them should have a corresponding setter node, and/or be allowed as input to the Transform and Stroke nodes. https://docs.blender.org/manual/en/latest/modeling/geometry_nodes/geometry/write/set_position.html  Down the road bezier handles should be accessible too. The more access to path data the better. "
  },
  {
    "number": 2816,
    "title": "Make selected Text category nodes show a multi-line text area instead of one-line text field",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2816",
    "user": "Ezbaze",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-02T03:04:59Z",
    "updated_at": "2025-07-02T03:37:53Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Modified Nodes  - String Value  - String Concatenate  - Replace String    Resolves https://discord.com/channels/731730685944922173/881073965047636018/1389675678865297488    Also closes #2806  "
  },
  {
    "number": 2815,
    "title": "Graph Editor Comments",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2815",
    "user": "lizard-demon",
    "labels": [
      "Design"
    ],
    "assignee": "",
    "comments_count": 2,
    "comments": [
      {
        "user": "lizard-demon",
        "created_at": "2025-07-01T22:53:11Z",
        "body": "I apologize I do not use github much. I do not know how to set this as a feature suggestion."
      },
      {
        "user": "Keavon",
        "created_at": "2025-07-01T23:07:28Z",
        "body": "This is the right area. I'll file the idea for future design consideration. Thanks."
      }
    ],
    "created_at": "2025-07-01T22:50:44Z",
    "updated_at": "2025-07-01T23:07:43Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "![Image](https://github.com/user-attachments/assets/923a9b14-2538-420f-9efa-8cd243e9ce92)"
  },
  {
    "number": 2814,
    "title": "Add X and Y offset overlay while dragging the select tool",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2814",
    "user": "Kavin006",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-07-01T19:03:55Z",
    "updated_at": "2025-07-04T05:43:46Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2813,
    "title": "Clean up node catalog by adding missing units, more tooltips; fix 'Line' node missing parameters",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2813",
    "user": "Keavon",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-01T12:30:29Z",
    "updated_at": "2025-07-01T14:47:56Z",
    "closed_at": "2025-07-01T14:47:55Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "- Audit and resolve units on all node macro node signatures  - Add new descriptions for math node parameter tooltips  - Fix \"Line\" node missing parameters when constructed from the new nodes menu  - Tidy up node code"
  },
  {
    "number": 2812,
    "title": "Copy and Paste for paths",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2812",
    "user": "4adex",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-01T10:28:49Z",
    "updated_at": "2025-07-01T22:11:44Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes #2744 "
  },
  {
    "number": 2811,
    "title": "Jj",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2811",
    "user": "Lavluuuuuu",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-01T09:09:56Z",
    "updated_at": "2025-07-01T09:18:53Z",
    "closed_at": "2025-07-01T09:18:36Z",
    "milestone": "",
    "is_pull_request": false,
    "body": ""
  },
  {
    "number": 2810,
    "title": "Suggestion: Tab to swap between Select and Path tool similar to Blender",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2810",
    "user": "otdavies",
    "labels": [
      "Design"
    ],
    "assignee": "Keavon",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-01T07:50:30Z",
    "updated_at": "2025-07-01T07:51:41Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "As it stands, we have _A -> V -> A_ as a very common key input when working on vector shapes. I recommend using tab to swap between the \"object mode\" (Select Tool) to the \"edit mode\" (Path tool). This would better match blender and the key is currently unused."
  },
  {
    "number": 2809,
    "title": "[Crash Report] Opening new document crashes in firefox",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2809",
    "user": "nrjais",
    "labels": [],
    "assignee": "",
    "comments_count": 5,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-07-01T11:44:20Z",
        "body": "Please post a screenshot of the issue."
      },
      {
        "user": "nrjais",
        "created_at": "2025-07-01T15:13:13Z",
        "body": "Seems to be working now, can't reproduce now"
      },
      {
        "user": "Keavon",
        "created_at": "2025-07-01T15:15:00Z",
        "body": "Strange that it ever occurred. Did you have any other documents open at the time, or were you viewing the welcome screen when you tried to create your first document when it crashed?"
      },
      {
        "user": "nrjais",
        "created_at": "2025-07-01T15:31:15Z",
        "body": "yes from welcome screen, I had opened the site for first time"
      },
      {
        "user": "Keavon",
        "created_at": "2025-07-01T15:38:53Z",
        "body": "Fascinating. I have no theories then. If it ever happens again, please report back. Glad you're able to use it now though!"
      }
    ],
    "created_at": "2025-07-01T05:06:15Z",
    "updated_at": "2025-07-01T15:38:53Z",
    "closed_at": "2025-07-01T15:13:13Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "**Describe the Crash** Explain clearly what you were doing when the crash occurred.  **Steps To Reproduce** Describe precisely how the crash occurred, step by step, starting with a new editor window. 1. Open the Graphite editor at https://editor.graphite.rs 2. Create new document 3.  4.  5.   **Additional Details** Provide any further information or context that you think would be helpful in fixing the issue. Screenshots or video can be linked or attached to this issue.  **Browser and OS** Firefox 142, Mac  **Stack Trace** Copied from the crash dialog in the Graphite editor:  ``` panicked at editor/src/node_graph_executor.rs:100:78: Failed to send generation request: \"sending on a closed channel\"  Fp/<@https://editor.graphite.rs/assets/index-DCQHZjFB.js:943:1179 g@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:64931 handleJsMessage@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:65079 vp/e<@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:65472 j2/o.wbg.__wbg_call_833bed5770ea2041/<@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:12695 vt@https://editor.graphite.rs/assets/index-DCQHZjFB.js:928:6130 j2/o.wbg.__wbg_call_833bed5770ea2041@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:12665 graphite_wasm.wasm._ZN13graphite_wasm10editor_api12EditorHandle27send_frontend_message_to_js17h0668831c386ddb67E@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[3750]:0x8b52d3 graphite_wasm.wasm._ZN4core3ops8function2Fn4call17h7e50954c4596dc1dE@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[14332]:0xba9680 graphite_wasm.wasm._ZN3std9panicking20rust_panic_with_hook17h1f8226e239ffaa71E@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[7604]:0xa908ae graphite_wasm.wasm._ZN4core9panicking9panic_fmt17hb6c28595a1feee80E@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[11844]:0xb7e006 graphite_wasm.wasm._ZN4core6result13unwrap_failed17h0af004c27326640fE@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[9341]:0xb3ae0f graphite_wasm.wasm._ZN15graphite_editor19node_graph_executor17NodeGraphExecutor28submit_node_graph_evaluation17haf89eb45f7a7a755E@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[2025]:0x6eec94 graphite_wasm.wasm._ZN325_$LT$graphite_editor..messages..portfolio..portfolio_message_handler..PortfolioMessageHandler$u20$as$u20$graphite_editor..utility_traits..MessageHandler$LT$graphite_editor..messages..portfolio..portfolio_message..PortfolioMessage$C$graphite_editor..messages..portfolio..portfolio_message_handler..PortfolioMessageData$GT$$GT$15process_message17h88e94f21d76b7b9bE@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[309]:0x95613 graphite_wasm.wasm._ZN15graphite_editor10dispatcher10Dispatcher14handle_message17hef80e4234270813cE@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[435]:0x2538e6 graphite_wasm.wasm._ZN13graphite_wasm10editor_api12EditorHandle19widget_value_update17hb8f1338393aa2634E@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[2059]:0x7052d8 graphite_wasm.wasm.editorhandle_widgetValueCommitAndUpdate externref shim multivalue shim@https://editor.graphite.rs/assets/graphite_wasm_bg-9GuQ_qVQ.wasm:wasm-function[11847]:0xb7e318 widgetValueCommitAndUpdate@https://editor.graphite.rs/assets/index-DCQHZjFB.js:929:4156 h@https://editor.graphite.rs/assets/index-DCQHZjFB.js:970:57629 Ce@https://editor.graphite.rs/assets/index-DCQHZjFB.js:970:58212 n@https://editor.graphite.rs/assets/index-DCQHZjFB.js:970:50249 h@https://editor.graphite.rs/assets/index-DCQHZjFB.js:967:65697 ```"
  },
  {
    "number": 2808,
    "title": "Add masking",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2808",
    "user": "mTvare6",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-07-01T02:34:15Z",
    "updated_at": "2025-07-01T03:17:12Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2807,
    "title": "Chrome-specific JS debugging: dragging the increment mode number field sometimes jumps at the start",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2807",
    "user": "Keavon",
    "labels": [
      "Help Wanted",
      "Good First Issue",
      "Web",
      "Paper Cut"
    ],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-30T22:23:16Z",
    "updated_at": "2025-06-30T22:33:51Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "This has happened for a long time, but I should really file an issue, so here it is. It seems to probably happen only in Chrome, unless perhaps it is just harder to reproduce in Firefox (I wasn't able to reproduce it in FF in my testing right now, but haven't ruled it out). See `NumberInput.svelte`.  When you click and drag a number input field of the increment (not range) style, meaning the kind you can drag infinitely left or right, it will sometimes teleport the value to a wildly different value from the one it started with. This can be reproduced by drawing a rectangle and dragging left and right on its stroke weight parameter in the Properties panel repeatedly in quick, small left and right drags until occasionally it will make a big jump.  I hypothesize this is caused by weirdness in the event ordering and mouse position reporting with the [pointer lock](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API) API, and it might be related to the widget being broken in Safari: #2038. I recommend logging the values that are being reported by the API and current state every frame to narrow down when the events occur and produce the discrepancy.  At the the 4-second mark in this video, we see it jump from `131.3` to `17.3` immediately when the click-and-drag begins:  https://github.com/user-attachments/assets/61b1b1e6-4560-4555-aac5-f7b54cbfacb9"
  },
  {
    "number": 2806,
    "title": "Wrong link in frontend/README.md",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2806",
    "user": "alvarogalloc",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-07-02T03:06:57Z",
        "body": "Thanks for noticing! This is small enough it's not worth tracking so I'll just close this issue but we'll fix it in that PR above."
      }
    ],
    "created_at": "2025-06-30T18:46:58Z",
    "updated_at": "2025-07-02T03:06:57Z",
    "closed_at": "2025-07-02T03:06:57Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "https://github.com/GraphiteEditor/Graphite/blob/master/frontend/README.md has a hyperlink 'Tauri' that refers to https://tauri.studio/ instead of https://tauri.app/ in line 5"
  },
  {
    "number": 2805,
    "title": "Fix running tests locally; fix migrations for relocated nodes",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2805",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-30T17:44:49Z",
    "updated_at": "2025-07-04T09:56:23Z",
    "closed_at": "2025-07-04T09:56:22Z",
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2804,
    "title": "Fix spline cleared on tool change",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2804",
    "user": "LixiviaDev",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-30T13:40:11Z",
    "updated_at": "2025-06-30T13:40:11Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Spline Tool: Spline won't stay unless closed or (Esc or Enter) is pressed.    My changes:  - Removed \"::AbortTransaction\" message, which completely cleared the new spline on \"::abort\".  - Added \"delete_preview()\" function to delete the preview point that tracks the mouse.  - Added \"::EndTransaction\" message to signal that we want to save the new spline as is."
  },
  {
    "number": 2803,
    "title": "New Shape : Spirals",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2803",
    "user": "0SlowPoke0",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-30T11:58:56Z",
    "updated_at": "2025-07-04T14:15:56Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2802,
    "title": "Disable preprocessor insertion of IntoNodes in the graph to avoid intermittent math node type errors",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2802",
    "user": "TrueDoctor",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-30T09:09:08Z",
    "updated_at": "2025-07-03T12:41:46Z",
    "closed_at": "2025-06-30T10:07:09Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Temporarily fixes regression introduced in #2478"
  },
  {
    "number": 2801,
    "title": "Fix: Unsafe File Access Could Allow Unauthorized Data Retrieval in website/install-fonts.js",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2801",
    "user": "kira-offgrid",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-30T04:34:02Z",
    "updated_at": "2025-06-30T04:44:51Z",
    "closed_at": "2025-06-30T04:40:28Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "**Context and Purpose:**  This PR automatically remediates a security vulnerability: - **Description:** Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first. - **Rule ID:** javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal - **Severity:** MEDIUM - **File:** website/install-fonts.js - **Lines Affected:** 84 - 84  This change is necessary to protect the application from potential security risks associated with this vulnerability.  **Solution Implemented:**  The automated remediation process has applied the necessary changes to the affected code in `website/install-fonts.js` to resolve the identified issue.  Please review the changes to ensure they are correct and integrate as expected."
  },
  {
    "number": 2800,
    "title": "Fix: GitHub Actions Script Vulnerable to Code Injection Attacks in .github/workflows/comment-!build-commands.yml",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2800",
    "user": "kira-offgrid",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-30T04:33:08Z",
    "updated_at": "2025-06-30T04:44:41Z",
    "closed_at": "2025-06-30T04:41:54Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "**Context and Purpose:**  This PR automatically remediates a security vulnerability: - **Description:** Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\". - **Rule ID:** yaml.github-actions.security.run-shell-injection.run-shell-injection - **Severity:** HIGH - **File:** .github/workflows/comment-!build-commands.yml - **Lines Affected:** 83 - 93  This change is necessary to protect the application from potential security risks associated with this vulnerability.  **Solution Implemented:**  The automated remediation process has applied the necessary changes to the affected code in `.github/workflows/comment-!build-commands.yml` to resolve the identified issue.  Please review the changes to ensure they are correct and integrate as expected."
  },
  {
    "number": 2799,
    "title": "Add ability to start lasso select within object without dragging layers",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2799",
    "user": "hemu",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-06-29T22:57:57Z",
    "updated_at": "2025-07-01T07:39:29Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "When beginning a lasso select from within an object, currently the behavior is to drag its layers. This PR updates this behavior such that a lasso select beginning within an object will remain a lasso selection over the existing layers.    Refactor select_tool and path_tool transition drag logic to determine an \"intent\" up front. This made it easier to incorporate the type of logic needed in this PR where the lasso select intent has priority over others, but its logic is shared with box select which has the lowest priority so it was hard to capture this in the existing if/else chain.      Part of #2647    NOTE: This is an alternate implementation compared to this simpler change: https://github.com/GraphiteEditor/Graphite/pull/2798    # Before    https://github.com/user-attachments/assets/86142094-4e4d-4457-9f6c-241df25c3ad0    # After  https://github.com/user-attachments/assets/64d97867-e38b-4699-8271-e51b4ba6af6f    "
  },
  {
    "number": 2798,
    "title": "Add ability to start lasso select within object without dragging layers",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2798",
    "user": "hemu",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-29T22:55:51Z",
    "updated_at": "2025-06-29T23:30:52Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "When beginning a lasso select from within an object, currently the behavior is to drag its layers. This PR updates this behavior such that a lasso select beginning within an object will remain a lasso selection over the existing layers.    NOTE: This is a simpler implementation compared to this alternative approach that includes a small refactor: https://github.com/GraphiteEditor/Graphite/pull/2799    Part of [#2647](https://github.com/GraphiteEditor/Graphite/issues/2647)    # Before    https://github.com/user-attachments/assets/86142094-4e4d-4457-9f6c-241df25c3ad0    # After  https://github.com/user-attachments/assets/64d97867-e38b-4699-8271-e51b4ba6af6f      "
  },
  {
    "number": 2797,
    "title": "Fix links in docs",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2797",
    "user": "Moharum1",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-29T20:59:38Z",
    "updated_at": "2025-06-29T23:15:20Z",
    "closed_at": "2025-06-29T23:15:19Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes ##2479    "
  },
  {
    "number": 2796,
    "title": "fix: Suppress verbose npm ci output in package-installer.js",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2796",
    "user": "Mirza-Samad-Ahmed-Baig",
    "labels": [],
    "assignee": "",
    "comments_count": 4,
    "comments": [],
    "created_at": "2025-06-29T11:59:29Z",
    "updated_at": "2025-07-02T12:38:58Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Instead of opening new issue, I thought of solving the issue on my own. Thank you.    This PR resolves a minor yet impactful issue in frontend/package-installer.js that caused excessive and distracting console output during development.    The package-installer.js script is responsible for automatically running npm ci whenever package.json or package-lock.json is modified. Previously, it invoked execSync with stdio: \"inherit\", which resulted in the full output of npm ci—including successful installation logs—being printed directly to the console. This cluttered the terminal, especially when combined with output from vite and cargo watch, making it harder to follow relevant logs."
  },
  {
    "number": 2795,
    "title": "Improve node graph performance",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2795",
    "user": "adamgerhant",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-06-29T09:54:09Z",
    "updated_at": "2025-07-03T08:42:22Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Move wire rendering into backend  Implement culling for offscreen nodes  Improves properties/document upgrade stability    Decreases frame time from 120ms -> 20ms when zoomed in on red dress node graph  Increases frame time from 120 -> 200ms when fully zoomed out    Old:  ![chrome_D18AToYUWg](https://github.com/user-attachments/assets/fde1d878-2be2-40e6-8c85-2cb4705f345f)  New:  ![chrome_AMXWLyTqfv](https://github.com/user-attachments/assets/a7defe74-8af5-4281-9a22-baa7da92b48b)    Known issues:   Subpath rectangle_intersections_exist function is buggy, so dragging onto wire is still inconsistent  "
  },
  {
    "number": 2794,
    "title": "Improve Path tool layer selection behavior using double-click instead of single-click",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2794",
    "user": "4adex",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-29T06:55:35Z",
    "updated_at": "2025-07-04T12:20:18Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes #2716     "
  },
  {
    "number": 2792,
    "title": "Fix lasso select extending the previous selection area after it was aborted",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2792",
    "user": "hemu",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-06-29T03:24:30Z",
    "updated_at": "2025-06-29T05:19:51Z",
    "closed_at": "2025-06-29T05:19:51Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Currently after aborting an in-progress lasso selection with RMB or ESC, starting a new lasso selection will extend the previous lasso selection instead of starting a new selection. This fix ensures the previous selection is cleared after abort.    Part of #2647    # before fix  https://github.com/user-attachments/assets/647fecd5-1be1-4b88-a902-6b3e739979d3    # after fix  https://github.com/user-attachments/assets/cd9a44c2-7259-4972-b1cf-0d064e4e1f04"
  },
  {
    "number": 2791,
    "title": "Sliders get stuck to the mouse",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2791",
    "user": "celyk",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-29T03:11:25Z",
    "updated_at": "2025-06-29T03:11:56Z",
    "closed_at": "2025-06-29T03:11:56Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "Some sliders don't stop scrolling after mouse up. Very annoying. The ranged sliders like rotation however don't have this issue  https://github.com/user-attachments/assets/cf94c2d7-9f14-43a0-9521-4bdadf69e457  Specs: MacBook Air M2 Safari 18.3 "
  },
  {
    "number": 2790,
    "title": "Jitter Points node has unexpected behaviour",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2790",
    "user": "celyk",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [
      {
        "user": "Momena-akhtar",
        "created_at": "2025-06-29T14:16:11Z",
        "body": "Hey if you want I can work on this and contribute to the issue, what is the procedure?"
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-30T00:28:27Z",
        "body": "I can confirm this is an issue. Taking a quick glance at it, I'd guess it is due to the `!= 0` on [this line](https://github.com/GraphiteEditor/Graphite/blob/master/node-graph/gcore/src/vector/vector_nodes.rs#L1508). @Momena-akhtar, just [follow these instructions](https://graphite.rs/volunteer/guide/) and open a PR— thanks!"
      },
      {
        "user": "Momena-akhtar",
        "created_at": "2025-06-30T14:01:42Z",
        "body": "> I can confirm this is an issue. Taking a quick glance at it, I'd guess it is due to the `!= 0` on [this line](https://github.com/GraphiteEditor/Graphite/blob/master/node-graph/gcore/src/vector/vector_nodes.rs#L1508). [@Momena-akhtar](https://github.com/Momena-akhtar), just [follow these instructions](https://graphite.rs/volunteer/guide/) and open a PR— thanks!  Will do! "
      }
    ],
    "created_at": "2025-06-29T02:51:10Z",
    "updated_at": "2025-06-30T14:01:42Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "My node setup: Transform -> Jitter Points  [transform-jitter-mrp.graphite.zip](https://github.com/user-attachments/files/20965739/transform-jitter-mrp.graphite.zip)  Everything works except when I set scale.x = 0. Then the jitter only happens along a line despite the transform taking place before the jitter  Setting the scale to a very small value gives the expected output  <img width=\"803\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/425e299c-d5ed-49f0-8cbc-4376163959d6\" /> "
  },
  {
    "number": 2789,
    "title": "Add shape-rendering SVG attribute support",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2789",
    "user": "phailhaus",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T17:33:37Z",
    "updated_at": "2025-06-28T17:33:37Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Partially Resolves #2775    Adds shape_rendering attribute to the PathStyle struct, adds support for writing it out when rendering the SVG, and adds a node that allows the user to set it on vectors.    Exact behavior varies by rendering engine. Tested:  * Vello: Not supported. Does nothing.  * Chrome: Functions for normal display and export. Does *not* function when using the Rasterize node.  * Firefox: Functions for normal display, export, and when using the Rasterize node.    This isn't a clean AA on/off toggle, however. There are four options, and it's up to the renderer what it wants to do with each. Outside of the Rasterize node difference, so far I'm seeing identical behavior between Chrome and FF, but it isn't logically consistent. Here is an example:  ![image](https://github.com/user-attachments/assets/a616a08e-9fee-4782-aefa-e53c0fbe4b7e)    The top example can be set to Auto (the default if not overridden) or Geometric Precision and get the same output as before this was implemented.  The bottom can be set to Crisp Edges or Optimize Speed to get the result shown. Notably, on the bottom, AA is off for stroke and fill edges on the flower, along with the interface between the fill and stroke on the red shape. The outer edge of the stroke is still antialiased. If I change the stroke from Inside to Center or Outside, the anti-aliasing goes away.    Useful function for a technical user, but consistency in support is lacking."
  },
  {
    "number": 2788,
    "title": "Is it possible to view network traffic by application process?",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2788",
    "user": "justfunc",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-28T23:37:06Z",
        "body": "Please elaborate."
      }
    ],
    "created_at": "2025-06-28T14:43:11Z",
    "updated_at": "2025-06-28T23:37:06Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": ""
  },
  {
    "number": 2787,
    "title": "Fix the 'Split Coordinate' node that was broken in an earlier refactor commit",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2787",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T14:39:28Z",
    "updated_at": "2025-06-30T06:49:01Z",
    "closed_at": "2025-06-30T06:49:00Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "forgot a rename, there will probably be even more nodes I missed"
  },
  {
    "number": 2786,
    "title": "Remove 'To u32', 'To u64', and 'To f64' number conversion nodes and clean up node type usages",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2786",
    "user": "Keavon",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T13:26:17Z",
    "updated_at": "2025-07-02T01:38:18Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": ""
  },
  {
    "number": 2785,
    "title": "Boolean operation | Subtract Front | Fails on text node sometimes",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2785",
    "user": "sm17p",
    "labels": [
      "Graphics"
    ],
    "assignee": "",
    "comments_count": 1,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-07-04T12:23:19Z",
        "body": "This will hopefully be resolved when we replace our boolean operations algorithm with the one being prototyped in #2670 (not yet usable)."
      }
    ],
    "created_at": "2025-06-28T13:05:58Z",
    "updated_at": "2025-07-04T12:23:43Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Font - Cabin  It's very arbitrary, I found it breaking for smallcase `d` and `e` depending on the `font-weight` and  `font-style` used.  1. ![Image](https://github.com/user-attachments/assets/11b13354-3b9b-40fc-9cba-3b1f7abc947b) 2. ![Image](https://github.com/user-attachments/assets/039fd90e-5d26-4f3f-9cf3-97d1e4ac8bb6)"
  },
  {
    "number": 2784,
    "title": "Extract `gbrush`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2784",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T11:01:24Z",
    "updated_at": "2025-07-01T18:38:48Z",
    "closed_at": "2025-07-01T18:38:48Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2783"
  },
  {
    "number": 2783,
    "title": "Extract `graster-nodes`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2783",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T11:00:52Z",
    "updated_at": "2025-07-01T18:12:13Z",
    "closed_at": "2025-07-01T18:12:12Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2782"
  },
  {
    "number": 2782,
    "title": "node macro: copy visibility from node function",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2782",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T10:26:43Z",
    "updated_at": "2025-07-01T15:29:01Z",
    "closed_at": "2025-07-01T15:29:00Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "No longer requires anything"
  },
  {
    "number": 2781,
    "title": "Update demo artwork to newest version",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2781",
    "user": "TrueDoctor",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-28T07:37:06Z",
    "updated_at": "2025-07-02T06:36:06Z",
    "closed_at": "2025-07-02T06:36:06Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    This should be merged before the profiling pr #2780  since we currently can't profile the changes due to outdated document versions  "
  },
  {
    "number": 2780,
    "title": "Include graph runtime benchmarks in ci regression run",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2780",
    "user": "TrueDoctor",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T07:07:59Z",
    "updated_at": "2025-07-03T12:34:59Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->  - [x] Update demo artwork to newest version "
  },
  {
    "number": 2779,
    "title": "Paints (solid color, gradient, pattern, and other existing graphical data)",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2779",
    "user": "Keavon",
    "labels": [
      "Architecture",
      "Graphics"
    ],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T06:18:27Z",
    "updated_at": "2025-06-28T06:37:16Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "A **paint** is something that's graphical, which can be given to a Fill or Stroke node to be applied to the appearance of a vector path or stroke area.  For Graphite, we should use a model where a paint can be any graphical data: 1. As a layer, it shows up with finite or infinite bounds in the render like normal. It may be clipped to a layer beneath it via a clipping mask. 2. As a fill paint, it shows up only within the fill area of a vector path. 3. As a stroke paint, it shows up only within the stroke area of a vector path.  Right now, we support any graphical **element** in case 1 (part of the render), but only the `FillChoice` enum which can be `None`/a solid `Color`/the `Gradient` struct for case 2 (vector fills), and only a `Color` for case 3 (vector strokes). This change calls for making the **Fill** and **Stroke** nodes accept any graphical data (i.e., anything that can be type-coerced into a graphical element) as opposed to their current parameters.  Then for colors and gradients, both of these types need to be added to the graphical element enum, allowing layers of color or gradient data to display infinitely in all directions. This solves the requested feature for choosing a background color of an infinite canvas, by simply making it be the bottom layer.  For patterns, we will have a sort of pattern tiling node which uses the footprint to render the infinite data. This can be implemented after the colors and gradients from the previous paragraph with insights gleaned from that process.  An alternative to adding these to the graphic element enum is that we could have a type coercion node that generates a vector rectangle with the footprint bounds, and fills it with the color, gradient, or pattern stroke. So feeding a color into a layer, a fill paint, or a stroke paint, would just type coerce it into a filled rectangle vector element of the appropriate size to cover the rendered area. This helps avoid needing to keep extending the graphic element enum and adding more rendering implementations to it.  We do need to update the renderer code to produce SVG output syntax for fill and stroke paints. For ordinary graphical data, this could work by using a `<pattern>` (without the infinite tiling unless the user has created an infinite pattern with the data) or clip/mask. For color, this needs to become a standard fill color, and for gradient, likewise.  Paint transforms need to also be preserved, so a scaled/skewed paint can be drawn with that stretch applied, just like we do for a skewed gradient right now using `Gradient::transform`.  More detailed discussion: https://discord.com/channels/731730685944922173/1175577028209168474/1388368187803959391  Links: - https://www.w3.org/TR/SVG2/pservers.html - https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Element/pattern - https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/fill - https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/stroke - https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorials/SVG_from_scratch/Fills_and_strokes"
  },
  {
    "number": 2778,
    "title": "Refactor 'Area' node to use Kurbo.",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2778",
    "user": "indierusty",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T05:07:50Z",
    "updated_at": "2025-06-28T13:25:58Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Partially Closes #2635   "
  },
  {
    "number": 2777,
    "title": "Add Color Constructor Nodes",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2777",
    "user": "phailhaus",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-28T04:30:04Z",
    "updated_at": "2025-06-29T02:14:59Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Resolves #2774    # Adds the following:  ## color crate function:  from_cmyka() function to convert CMYKA to RGBA    ## Nodes:  All nodes clamp input to 0 -> 1 before passing to matching function in color crate    construct_color_rgba() accepts f32 inputs in RGBA format and outputs a color  construct_color_hsla() accepts f32 inputs in HSLA format and outputs a color  [ConstructColorDemo.zip](https://github.com/user-attachments/files/20958769/ConstructColorDemo.zip)    construct_color_grayscale() accepts a single f32 luminance input and outputs a color  construct_color_cmyka() accepts f32 inputs in CMYKA format and outputs a color    I am struggling to understand more complex node construction. These could likely get merged, but I couldn't figure out how to create options that swap out inputs.      # Demo: [ConstructColorDemo.zip](https://github.com/user-attachments/files/20958769/ConstructColorDemo.zip)  The squares in the background test the four nodes in order from the center out. The dots in the foreground demonstrate a more practical use, deriving color from the instance index in a way that can't be done with a simple gradient.    ![ConstructColorDemo](https://github.com/user-attachments/assets/08bf3c16-456a-4df2-afab-860b8201abd3)  "
  },
  {
    "number": 2776,
    "title": "Pen/Freehand/Splines tool should set its origin to the first drawn point location when the new layer is created",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2776",
    "user": "Keavon",
    "labels": [
      "Good First Issue",
      "Paper Cut"
    ],
    "assignee": "",
    "comments_count": 3,
    "comments": [
      {
        "user": "Ahadeddiy",
        "created_at": "2025-06-30T14:32:32Z",
        "body": "Can I work on this issue?"
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-30T14:33:27Z",
        "body": "Yes, this is available.  Note: the spreadsheet view, opened from the View menu, will be helpful in your implementation process."
      },
      {
        "user": "Ahadeddiy",
        "created_at": "2025-06-30T14:38:14Z",
        "body": "Thanks, I'll start working on this. I'll go through the spreadsheet view from the View menu as suggested. I'll keep you updated with progress and will let you know if I have any questions. This is my first contribution, so please feel free to guide me if I go wrong anywhere."
      }
    ],
    "created_at": "2025-06-28T02:17:42Z",
    "updated_at": "2025-06-30T14:38:14Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Right now, the origin gets set to the parent (usually canvas) origin which is often far away from where the user is drawing. At least we know that, when drawing a shape and its layer gets created, the user likely has an interest in a particular area in space roughly nearby the first point being drawn. So that's the better choice. This means adding a Transform node to provide the offset to the first point location."
  },
  {
    "number": 2775,
    "title": "Add Option to Disable Antialiasing",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2775",
    "user": "phailhaus",
    "labels": [
      "Good First Issue",
      "Graphics"
    ],
    "assignee": "",
    "comments_count": 2,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-28T01:28:43Z",
        "body": "I believe this could be added to the `AlphaBlending` struct and set by a node. Clipping masks and even just the simple case of opacity work in a similar way and could be referenced. I'll add this to the backlog and open it up for contribution.  For SVG rendering, this becomes the [shape-rendering](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering) attribute. For Vello rendering, I haven't checked the documentation yet."
      },
      {
        "user": "0HyperCube",
        "created_at": "2025-06-28T10:54:04Z",
        "body": "Unfortunately vello only allows for setting the anti aliasing for the entire render.   https://github.com/linebender/vello_svg/blob/43fe2d2d823890a7def1f81c9350b656d95588ae/src/lib.rs#L23"
      }
    ],
    "created_at": "2025-06-28T00:30:05Z",
    "updated_at": "2025-06-28T11:03:25Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "An option to disable anti-aliasing would expand usefulness for specialized situations.  Example of usecase that is broken by AA: I've been working on a project that involves stroking paths with a series of circles that change color based on distance from the start of the path. I can then use a specialized shader in a raster pipeline to threshold the image, giving a hand-drawn line that can be 'drawn' in real time with extremely light loads on both CPU and GPU. To do this, I need every pixel of a circle to be either 100% the desired color or entirely transparent. Anything inbetween results in artifacts.  My current workflow involves copying paths out of an SVG into a python script to generate these stroked textures, but Graphite provides a very enticing alternative."
  },
  {
    "number": 2774,
    "title": "Create Color from Component Values",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2774",
    "user": "phailhaus",
    "labels": [
      "Good First Issue"
    ],
    "assignee": "",
    "comments_count": 1,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-28T01:33:40Z",
        "body": "My thoughts on this posted in Discord which can be used to adapt this into an implementation:  > You could add it as like a Construct Color node which has modes for Grayscale, RGB, HSV, CMYK, Lab, etc. from a dropdown menu (you can reference other code examples) and it can take the different inputs for each of those parameters to produce a color as output."
      }
    ],
    "created_at": "2025-06-28T00:19:58Z",
    "updated_at": "2025-06-28T01:33:40Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "A node that takes four numbers (int or float, doesn't matter) as R, G, B, and A and outputs a color is needed for situations where color is driven mathematically by other elements.  The best workaround I have found when alpha isn't needed is to create three gradients, one for Black->Red, Black->Green, and Black->Blue. I can then sample those gradients and use them to produce three duplicates of the geometry, each representing one color channel. Finally, I can blend them using the Lighten blendmode to get the composite image."
  },
  {
    "number": 2773,
    "title": "Fix Shape tool custom color picker using gamma not linear space",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2773",
    "user": "0HyperCube",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T23:56:05Z",
    "updated_at": "2025-06-28T01:32:15Z",
    "closed_at": "2025-06-28T01:32:14Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Closes #2769.    Colours should all be in linear space.  "
  },
  {
    "number": 2772,
    "title": "Fix incorrectly calculating nonzero-area bounding boxes for empty raster images",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2772",
    "user": "0HyperCube",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T23:47:40Z",
    "updated_at": "2025-06-28T02:37:39Z",
    "closed_at": "2025-06-28T02:37:37Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "When there is a raster layer with zero width/height it shouldn't get a bounding box."
  },
  {
    "number": 2771,
    "title": "Only compute bounding box for layers being rendered by Vello when actually used",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2771",
    "user": "TrueDoctor",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T21:56:04Z",
    "updated_at": "2025-06-28T02:06:53Z",
    "closed_at": "2025-06-28T02:06:52Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->      "
  },
  {
    "number": 2770,
    "title": "Fix DropdownInput widget not reactively updating when its content changes",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2770",
    "user": "0HyperCube",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-27T20:35:23Z",
    "updated_at": "2025-06-28T02:59:04Z",
    "closed_at": "2025-06-28T02:59:03Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "I though the idea of svelte was that it did the fine grained reactivity automatically?    I guess maybe they fixed this in the new version?"
  },
  {
    "number": 2769,
    "title": "Color in Tool Color Picker is Scaled for Shape Tools (Line, Rectangle, Ellipse, Shape)",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2769",
    "user": "harrhunt",
    "labels": [],
    "assignee": "0HyperCube",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T17:43:55Z",
    "updated_at": "2025-07-02T02:44:56Z",
    "closed_at": "2025-06-28T01:32:15Z",
    "milestone": "Milestone 49",
    "is_pull_request": false,
    "body": "This affects the line, rectangle, ellipse, and shape tools. Happens with both mouse drag and text input. Present on https://github.com/GraphiteEditor/Graphite/commit/9c4ab34a5830932a1aa4d485d2f511a2061896ef  https://github.com/user-attachments/assets/d5c8ddb8-b24a-477e-ba3b-bb84ef18943b"
  },
  {
    "number": 2768,
    "title": "Add the re-fit on delete feature to the Path tool",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2768",
    "user": "4adex",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-27T14:13:21Z",
    "updated_at": "2025-07-04T11:58:14Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes #2651  "
  },
  {
    "number": 2767,
    "title": "Extract `gelement-nodes` for nodes accepting vector, raster or element",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2767",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T13:55:11Z",
    "updated_at": "2025-07-01T15:07:57Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2764"
  },
  {
    "number": 2766,
    "title": "Suggestions/Requests: Graphite is awesome!",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2766",
    "user": "fmchris10",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-29T09:32:17Z",
        "body": "Thanks! I'm very glad it is looking to be the tool you'll be lined up to use most in the future. I can't wait for when it meets your needs.  How big is your Android device's screen (I must assume it's a tablet?) and are you really doing actual production work with touch controls rather than a keyboard and mouse? Anyhow, you can follow #1545 for upcoming progress on mobile and touch controls.  We'll be sure to look into more image formats as well. With revamped raster support in the works, some of the infrastructure around that is likely to evolve and may naturally lead to an expanded range of file I/O choices. An interested contributor could also probably take that on right now without it being blocked by anything that I know of.  Thanks for the feedback and insight about your use cases!"
      },
      {
        "user": "fmchris10",
        "created_at": "2025-06-29T20:14:26Z",
        "body": "Yes, Android. It's 11 inches; I do have access to using a mouse, but I would be on the fly quite a bit, so touch controls sound very exciting.  Thank you for building Graphite, it's really awesome!  PS. It was at XDA that I learned about this project."
      }
    ],
    "created_at": "2025-06-27T13:31:33Z",
    "updated_at": "2025-06-29T20:14:26Z",
    "closed_at": "2025-06-29T09:32:17Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "Firstly, thank you to everyone involved with this. I read an article earlier that promoted this project, and I am very impressed. The UI looks so easy to use, and it's the nicest online editor.  Additional formats such as, .webp .avif, .gif etc would be useful. Compression levels are very useful for those who edit images while online.  You probably already have plans for these, but I thought I would request or suggest them. I do a lot of work for my websites while on the move; I am Android-based. I currently use Photopea, which is awesome, but it can be fiddly on a tablet, especially when using the touchscreen. The ads can be distracting, too, and whilst I am not remotely against them, it does make an impact when trying to edit a simple image quickly. Due to the cost involved, I am unable to pay for Photopea, but I have donated.  I will be looking to make Graphite my go to online editor for sure. "
  },
  {
    "number": 2765,
    "title": "Fix Path tool multi-point handle scaling behavior and double-click smooth/sharp conversion on rectangles",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2765",
    "user": "0SlowPoke0",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-27T10:41:00Z",
    "updated_at": "2025-06-30T07:56:23Z",
    "closed_at": "2025-06-30T07:56:22Z",
    "milestone": "",
    "is_pull_request": true,
    "body": " - fixed while scaling 2+ anchors ,should scale to their common center while also scaling their handles in unison.   - double-click on anchor connected to linear segments fails to flip between smooth-sharp"
  },
  {
    "number": 2764,
    "title": "Extract `gmath_nodes` from `gcore::ops`, create mods `debug` and `extract_xy`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2764",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T10:34:31Z",
    "updated_at": "2025-06-27T22:04:26Z",
    "closed_at": "2025-06-27T22:04:24Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2760    Split out from https://github.com/GraphiteEditor/Graphite/pull/2746#issuecomment-3012398175"
  },
  {
    "number": 2763,
    "title": "Stacked pr ci",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2763",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T10:28:41Z",
    "updated_at": "2025-06-27T12:40:56Z",
    "closed_at": "2025-06-27T12:40:54Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "allow ci to run on PRs which don't target master, since I commonly change the base in my stacked PRs to not be master but the previous PR in the stack"
  },
  {
    "number": 2762,
    "title": "Extract `gpath_bool` from `mod gstd::ops` path_bool-related nodes",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2762",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T10:18:41Z",
    "updated_at": "2025-06-27T13:12:09Z",
    "closed_at": "2025-06-27T13:12:08Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2763    Split out from https://github.com/GraphiteEditor/Graphite/pull/2759#issuecomment-3012399288"
  },
  {
    "number": 2761,
    "title": "Fix regression in previous commit where node parameter updates didn't refresh the render",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2761",
    "user": "0SlowPoke0",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-27T08:31:38Z",
    "updated_at": "2025-06-27T08:42:11Z",
    "closed_at": "2025-06-27T08:42:10Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Fixes an issue where changes made in the Properties panel didn’t update , until the user panned cause by regression in #2748 "
  },
  {
    "number": 2760,
    "title": "Extract `gsvg_renderer` from `gcore`, remove `gcore/vello` feature ",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2760",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-26T17:56:40Z",
    "updated_at": "2025-06-27T13:47:47Z",
    "closed_at": "2025-06-27T13:47:46Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2762"
  },
  {
    "number": 2759,
    "title": "Prep `gcore` splitup 2: Vector extension traits",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2759",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-26T17:56:14Z",
    "updated_at": "2025-06-27T10:30:15Z",
    "closed_at": "2025-06-27T10:30:12Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2746"
  },
  {
    "number": 2758,
    "title": "Fixes for Alpha .exe and windows installers builds - windows Alpha release",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2758",
    "user": "davad00",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-26T15:22:48Z",
    "updated_at": "2025-06-27T01:02:34Z",
    "closed_at": "2025-06-26T18:06:02Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Updates the node graph to streamline vector geometry processing and UI components.    The changes include:  - Renaming `Sample Polyline` node to `Sample Points` node  - Removing `PointSpacingType` enum and properties from the UI    These changes improve code readability and streamline the node graph. The update enables a smoother transition from older file formats.    Also enables devtools in the Tauri app during development.    Refactors node graph and UI components    <!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Closes #  "
  },
  {
    "number": 2757,
    "title": "Add Arc Shape and Arc Gizmos",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2757",
    "user": "0SlowPoke0",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-26T13:09:00Z",
    "updated_at": "2025-07-04T14:15:09Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "- Implemented 'Arc' shape which can be drawn by the shape tool  - Added Arc gizmos to change the arc endpoints  - fixed  bug #2743 "
  },
  {
    "number": 2756,
    "title": "[BUG] Persistent \"New Document\" Popup",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2756",
    "user": "PedroMAdorno4",
    "labels": [],
    "assignee": "",
    "comments_count": 21,
    "comments": [
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:14:09Z",
        "body": "This was on the editor.graphite.rs website, which I dont know how up-to-date it is with the dev branch "
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T02:14:42Z",
        "body": "- Have you tried closing the editor and opening it again? - Do you have something physically pressing down the keys on your keyboard? Does this continue if you unplug your keyboard? - Do you have any kind of macros that simulate key presses running on your computer?"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:28:12Z",
        "body": "I have tried, sometimes it opens my \"old\" document with the image, sometimes it does not get to that and glitches at the 'new document' popup. I in fact, do not know where that old image/document is being stored since via developer tools console, no such stored data is shown. Answering directly: 1) Yes, sometimes glitches on the 'new document' popup, sometimes loads my old document with the image where i cant do anything due to lag 2) No, I have not / continues even without keyboard 3) No macros as well  I can assure you there are no inputs being spammed physically or virtually"
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T02:32:32Z",
        "body": "What browser are you using? And can you try a different browser to see if this happens there?"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:32:38Z",
        "body": "I think I got a clue as to what caused it now. I believe I opened my image reference file via the \"Open (ctrl+o)\" action instead of the \"Import (ctrl+i)\" action."
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:33:13Z",
        "body": "I am using firefox and did try using brave, but same thing happened"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:34:12Z",
        "body": "In the \"Open\" menu, when it opens the file dialog, if I switch it to \"All files\" instead of \".graphite\" ones, and import the image that way, it lags the hell out of the app"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:34:36Z",
        "body": "Can u try reproducing it that way?"
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T02:35:11Z",
        "body": "What OS?  In Firefox dev tools (<kbd>F12</kbd>), go to the Storage tab, expand \"Indexed DB\" on the left side bar, expand the URL, then right click on \"graphite (default)\" and click delete. Then reload the page. Does this make it stop happening once you create a new document?"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:39:58Z",
        "body": "I'm on NixOS, revision 08f22084e6085d19bcfb4be30d1ca76ecb96fe54 of nixpkgs.  Also, running Hyprland. Don't know if it changes anything, but maybe some rendering stuff is involved?  Cleaning everything from the \"Indexed DB\" for graphite on firefox did solve it when I reopened it.  But it happens again if I redo it."
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T02:44:14Z",
        "body": "From a clean slate, what are the precise, detailed steps to reproduce the problem? A video would be helpful as a supplement to the listed steps."
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T02:49:06Z",
        "body": "Yes, of course. Here we go. It apparently happens when importing via the \"Import (ctrl+i)\" menu as well.  I just recorded it. After selecting the image and pressing Open, I try to scroll the canvas but its unresponsive. I show it shortly after by hovering over the toolbar icons.  ![Image](https://github.com/user-attachments/assets/68af20ac-e2cd-4191-a5cf-57df49621068)  I could not reproduce the new document glitch, unfortunately"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:00:16Z",
        "body": "Sry, took a while to convert the video to a gif so I could upload it here. "
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:01:18Z",
        "body": "I could see what I showed on that last gif as a separate issue, but I do think they are correlated"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:01:30Z",
        "body": "I'll send the picture I used as well   <details><summary>Picture</summary> <p>  ![Image](https://github.com/user-attachments/assets/102a0f81-9fa8-4272-bcaa-3d678f5febfe)  </p> </details>  "
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T03:07:22Z",
        "body": "Importing and rendering high-resolution images, shown in your clip, is a known performance limitation at the moment (vector and low-resolution raster is all we recommend using until the future when that's resolved). But this issue—being spammed with a constantly reopening New Document dialog—is unrelated to that, right?"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:12:49Z",
        "body": "Ah, I see. That is indeed a separate issue then. However, the originally reported one is definitely there since it just happened again to me. I'll dial in how to reproduce it and come back"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:21:19Z",
        "body": "It does seem to be an issue related to storage and how it is being loaded. It always happens when the image loads, even though both indexed dbs (firefox and brave) were empty (and still are after the glitched loading). Maybe some caching issues? The image does seem to be coming back from empty air from me, even though the dbs are cleared and I even deleted it from the layers manually from the browsers"
      },
      {
        "user": "PedroMAdorno4",
        "created_at": "2025-06-26T03:22:58Z",
        "body": "Maybe an issue from using it with multiple browsers? Seems unlikely for me for now, but I'll try to get some nice steps to reproduce it. I'll be back eventually with hopefully good news.  "
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T03:40:17Z",
        "body": "Just note that, after clearing the storage by right-clicking to delete it from the sidebar as I described above, you have to also reload the page."
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T11:08:27Z",
        "body": "I'll close this at least temporarily, but reopen it if I hear back with a production. It's also possible it could have been a one-off bug from an outdated file."
      }
    ],
    "created_at": "2025-06-26T02:11:14Z",
    "updated_at": "2025-06-26T11:08:27Z",
    "closed_at": "2025-06-26T11:08:27Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "I created a sketch and imported an image I took with my phone. Immediately, performance dropped to perhaps sub-1 fps. Hovering over anything didn´t show anything, nor did trying via shortcuts. Some time later, I decided to start a sketch from scratch, and when selecting the \"New document\" 'OK' option, it opened my previous \"document\" with the image that lagged everything, and the \"new document\" popup persisted. I'm including a short video, but the issue seems to be a width event listener not being de-registered and causing the bug.  Basically, I'm stuck with \"New Document\" popup and it doesn't matter if I'm on a new document or not, nor does pressing \"ok\" or \"cancel\" change anything  Images show a thousand words, so here we go:  ![Image](https://github.com/user-attachments/assets/9f11b852-abe2-4f21-8fe3-59d4028ed3c7)"
  },
  {
    "number": 2755,
    "title": "(frontend): Incremental migration to svelte 5",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2755",
    "user": "sm17p",
    "labels": [],
    "assignee": "",
    "comments_count": 5,
    "comments": [],
    "created_at": "2025-06-25T20:48:42Z",
    "updated_at": "2025-07-04T06:42:26Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "### Migration Plan step by step  - [x] Turn on `dynamicCompileOptions` for `vite-plugin-svelte`, and add files in the runes whitelist (`runesGlobs`)  - [x]  Run the migration script for whitelisted files  - [x] Fix `svelte/legacy` depracation warnings (Avoiding `createBubbler` over here)   - [x]  Once all the components are `runes` compatible, start chiping away the remaining`svelte/legacy` compat bindings  - [ ] Add commits to `.git-blame-ignore-revs` for a cleaner git blame     <hr />    Following the [svelte 5 migration guide](https://svelte.dev/docs/svelte/v5-migration-guide)    <hr />    #### Known Issues  - [x] `patchWidgetLayout` doesn't update deeply nested properties reactively - [81e50bd](https://github.com/GraphiteEditor/Graphite/pull/2755/commits/81e50bd74aebbc1247b14c3aaff04f296a483460)  - [x] `Graph.svelte` (Node Graph) is invisible on load, displays after clicking on screen - [055b6f3](https://github.com/GraphiteEditor/Graphite/pull/2755/commits/055b6f3d27a11b1201a3b9fe3b57a48d3a287313)  - [x] `NodeCatalog.svelte` reactive bindings messed up for sub-menus and node creation - https://github.com/GraphiteEditor/Graphite/pull/2755/commits/1ed2aef5859a69cbebac38107aad6d7bfe07c36e    "
  },
  {
    "number": 2754,
    "title": "Fix 'Morph' node lerping the target paths to its end point instead of start point",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2754",
    "user": "indierusty",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-25T07:34:05Z",
    "updated_at": "2025-06-26T07:44:23Z",
    "closed_at": "2025-06-26T07:44:22Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->  Fixes a regression introduced in PR #2696   "
  },
  {
    "number": 2753,
    "title": "Path tool dragging, then pressing Shift to constrain horiz./vert., should begin from a snapping point",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2753",
    "user": "Keavon",
    "labels": [
      "Good First Issue"
    ],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-25T01:42:59Z",
    "updated_at": "2025-06-25T01:42:59Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "At the beginning of this video, I add <kbd>Shift</kbd> to the drag and it correctly performs the horizontal/vertical snapping from its original drag location. But in the second half of the video, I demonstrate a use case where this feature is desired: when the point is dragged such that it snaps over another point, then <kbd>Shift</kbd> is pressed at that time, we would like that snapped point to become the source of the horizontal/vertical constraint. Releasing <kbd>Shift</kbd> and pressing it again while not snapped should retain its current behavior of constraining relative to the point where the drag began. As shown in the video, this feature would make it very easy to keep the top point aligned to the same X coordinate as the bottom point.  https://github.com/user-attachments/assets/e59f5531-8b8a-4a18-a5ab-520fef992aa8"
  },
  {
    "number": 2752,
    "title": "Adjust handles on point dissolve",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2752",
    "user": "HWienhold",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-24T23:16:44Z",
    "updated_at": "2025-06-25T17:22:57Z",
    "closed_at": "2025-06-25T17:22:57Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "resolves #2651   "
  },
  {
    "number": 2751,
    "title": "Added node macro e2e-test",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2751",
    "user": "MendyBerger",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-24T19:08:39Z",
    "updated_at": "2025-06-28T13:25:58Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Just adds a test"
  },
  {
    "number": 2750,
    "title": "Boolean operations no longer work the same",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2750",
    "user": "harrhunt",
    "labels": [],
    "assignee": "Keavon",
    "comments_count": 5,
    "comments": [
      {
        "user": "harrhunt",
        "created_at": "2025-06-24T16:19:10Z",
        "body": "Here are links to the latest commits for each of those builds. Works: [https://github.com/GraphiteEditor/Graphite/commit/c1b15fcfdf68b086bf7985910cdf795f6ffd1b31](https://github.com/GraphiteEditor/Graphite/commit/c1b15fcfdf68b086bf7985910cdf795f6ffd1b31) Breaks: [https://github.com/GraphiteEditor/Graphite/commit/b5975e92b26ffd5efe8c7397f230b6eb8c942152](https://github.com/GraphiteEditor/Graphite/commit/b5975e92b26ffd5efe8c7397f230b6eb8c942152)"
      },
      {
        "user": "0HyperCube",
        "created_at": "2025-06-24T21:12:06Z",
        "body": "The reason for this is that «merge by distance» node uses an undirected graph. This means that the direction of the contour is not preserved. https://github.com/GraphiteEditor/Graphite/blob/11ba2cc0fe23cfd6ccbb59b771a13c7b5af32018/node-graph/gcore/src/vector/algorithms/merge_by_distance.rs#L13 Since this is rendered using the default non-zero [fill rule](https://www.w3.org/TR/SVG11/painting.html#FillRuleProperty), the hole will sometimes disappear."
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-24T21:31:22Z",
        "body": "Ah, darn, not so easy after all to fix-up for duplicate points."
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-25T01:26:59Z",
        "body": "Should be fixed now."
      },
      {
        "user": "harrhunt",
        "created_at": "2025-06-25T13:06:50Z",
        "body": "Thanks for the quick fix!"
      }
    ],
    "created_at": "2025-06-24T16:16:44Z",
    "updated_at": "2025-07-02T02:44:56Z",
    "closed_at": "2025-06-25T01:23:29Z",
    "milestone": "Milestone 49",
    "is_pull_request": false,
    "body": "I noticed that some boolean operations I had been using stopped working a few days ago. I went through the builds in the dev & CI actions and it looks like they work on [https://f20c6739.graphite.pages.dev/](https://f20c6739.graphite.pages.dev/) but not on [https://fc501545.graphite.pages.dev/](https://fc501545.graphite.pages.dev/) I was specifically using **subtract front**, but it looks like some of the other boolean operations also have issues.  https://github.com/user-attachments/assets/def62c27-3ae9-4929-9917-23f60f3debee"
  },
  {
    "number": 2749,
    "title": "Boolean operation fills holes in some cases",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2749",
    "user": "Projectius",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-25T01:26:42Z",
        "body": "Was this from https://editor.graphite.rs or https://dev.graphite.rs ?"
      },
      {
        "user": "Keavon",
        "created_at": "2025-06-26T05:41:58Z",
        "body": "Closing as assumed fixed in https://dev.graphite.rs."
      }
    ],
    "created_at": "2025-06-24T15:32:51Z",
    "updated_at": "2025-06-26T05:41:58Z",
    "closed_at": "2025-06-26T05:41:58Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "![Image](https://github.com/user-attachments/assets/973c02e4-c33e-45d9-b61d-d76876e81c57)  https://github.com/user-attachments/assets/438164f8-8835-426f-99a1-216fc07c1f3b"
  },
  {
    "number": 2748,
    "title": "Refactor shape gizmo interactivity to support future shape tools",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2748",
    "user": "0SlowPoke0",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-24T08:02:47Z",
    "updated_at": "2025-06-27T05:35:20Z",
    "closed_at": "2025-06-27T05:34:36Z",
    "milestone": "",
    "is_pull_request": true,
    "body": " Followup PR of #2683, and this fixes the two bugs mentioned by @Keavon in that.      ## ShapeGizmoHandler trait    Provides a common interface for shape-specific interactive gizmos (e.g., Star, Polygon).    Defines methods for handling state updates, clicks, dragging, overlays, and cleanup.    ## ShapeGizmoHandlers enum    Enum wrapper that abstracts over concrete shape gizmo types.    ## GizmoManager struct    Central controller that detects active gizmo layers, handles hover/click/drag input, and manages rendering.    Groups selected layers by shape type and activates the correct gizmo when hovered."
  },
  {
    "number": 2747,
    "title": "Allow tooling to treat near-zero-length handles as zero-length with an epsilon",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2747",
    "user": "HWienhold",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-06-23T15:55:15Z",
    "updated_at": "2025-06-28T13:25:58Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "fixes https://discord.com/channels/731730685944922173/881073965047636018/1353015950894698606      Fixes a bug when connecting two paths ending with single handle (each) and applying `colinear handles`. on the newly connected nodes. Problem arises because applying `colinear handles` on the first node will create the opposite handle. The other node then has two handles, one of which is the anchor itself, hence:    ```  let mut handle_directions = handle_positions.map(|handle| handle.map(|handle| handle - anchor));  ```    will contain a null-Vec.    To be fair: this slightly changes the behavior when applying `colinear handles` to other nodes that only has one handle: while before it wouldnt change that node - now it will calculate the handles based on the anchors as well."
  },
  {
    "number": 2746,
    "title": "Prep `gcore` splitup: move various symbols into their own modules",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2746",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 1,
    "comments": [],
    "created_at": "2025-06-23T12:03:16Z",
    "updated_at": "2025-06-27T09:54:36Z",
    "closed_at": "2025-06-27T09:54:34Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Moving some symbols within `gcore` to their own modules, to allow them to remain within `gcore` and move the rest into separate crates in a later PR."
  },
  {
    "number": 2745,
    "title": "Make `wasm` only depend on `gstd`, not `gcore`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2745",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-23T09:02:02Z",
    "updated_at": "2025-06-23T10:30:42Z",
    "closed_at": "2025-06-23T10:30:42Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2742"
  },
  {
    "number": 2744,
    "title": "Copying and pasting geometry while in the Path tool",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2744",
    "user": "Keavon",
    "labels": [],
    "assignee": "4adex",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-23T06:57:55Z",
    "updated_at": "2025-06-23T06:57:55Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "Ctrl+C and Ctrl+V should work, while in the Path tool, directly on the geometry (points, segments, regions). If pasted while not using the Path tool, or when the Path tool is working with 0 or 2+ selected layers, it should create a new Path layer (with default fill and stroke) with that geometry.  Ctrl+D should also duplicate the selected geometry in place, as if the user had copy-and-pasted it. Currently, Ctrl+D duplicates the whole layer while in the Path tool, so this should override that while this tool is active."
  },
  {
    "number": 2743,
    "title": "Star tool shows strange angle",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2743",
    "user": "0HyperCube",
    "labels": [
      "Good First Issue",
      "Paper Cut"
    ],
    "assignee": "0SlowPoke0",
    "comments_count": 2,
    "comments": [
      {
        "user": "Keavon",
        "created_at": "2025-06-22T09:33:12Z",
        "body": "We can draw it more accurately like this, where the annotated blue lines here are parallel to the sides so the square mark is skewed in the same manner as the whole star shape:  ![Image](https://github.com/user-attachments/assets/a59c12ce-17c6-437b-8d58-f60241b2a92b)"
      },
      {
        "user": "0HyperCube",
        "created_at": "2025-06-22T09:35:57Z",
        "body": "It would be better if it actually snapped to being a right angle."
      }
    ],
    "created_at": "2025-06-22T09:29:19Z",
    "updated_at": "2025-06-22T09:35:57Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "When using the star mode of the polygon tool, you can edit the star by dragging the corner whilst still in the star tool. This causes some very strange functionality as seen below:  ![An 80 degree angle outlined in orange](https://github.com/user-attachments/assets/483132ae-9f02-4894-b1b4-aaa0fd40e3b7)  Apparently this is meant to be a right angle. However it is not."
  },
  {
    "number": 2742,
    "title": "Extract `gapplication_io` from `gcore`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2742",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-21T22:35:00Z",
    "updated_at": "2025-06-23T09:35:16Z",
    "closed_at": "2025-06-23T09:35:14Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2737    Removes the `wasm` features from `gcore` and the `web_sys` dependency."
  },
  {
    "number": 2741,
    "title": "Reduce development environment warnings and remove DWARF debug symbols",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2741",
    "user": "0HyperCube",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-20T21:51:35Z",
    "updated_at": "2025-06-22T10:10:27Z",
    "closed_at": "2025-06-22T10:10:25Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "- Ignore tauri gen folder  - Deny warnings on CI (runs after cloudflare publish)  - Fix all warnings on current rust nightly  - Disable DWARF debugging to reduce compile times and RAM usage from wasm-bindgen."
  },
  {
    "number": 2740,
    "title": "Tracking Issue: Code quality refactors",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2740",
    "user": "0HyperCube",
    "labels": [
      "Architecture"
    ],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-20T20:53:48Z",
    "updated_at": "2025-06-21T03:15:28Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": false,
    "body": "## Match statements Some files contain a single match statement that are very long (e.g. portfolio 1356 lines, document 1335 lines, select 1070, path 799). This is rather hard to manage or debug. - Split message handlers - Move complex logic outside of the match statement  ## Cloning the document History / transactions involve cloning the document many times. This very bad for performance and completely inflexible [#2617](https://github.com/GraphiteEditor/Graphite/issues/2617) . The [issue from 2021](https://github.com/GraphiteEditor/Graphite/issues/123) still hasn't had any progress due to the enormous refactoring that would be involved in making a system with proper actions. The current system also creates much confusion when history interacts with tools (especially the pen tool [#2262](https://github.com/GraphiteEditor/Graphite/issues/2262). - Write a system whereby actions and their reverse can be stored instead. This will require a major refactor. I don't really want to undertake this whilst so many of the systems are in flux  ## UI UI code is verbose and poorly structured. The current system is partially immediate mode, using all of our custom types. All of the UI is then diffed in a rather fragile way. The callback system is also rather confusing causing issues like [#2530](https://github.com/GraphiteEditor/Graphite/issues/2530). - Rewrite using a better UI library e.g. iced. Keavon wants to adopt some research project but I'm not sure this is a good idea. - Make the API for the UI layout more like egui to improve simplicity.   ## Transforms & Click targets Transforms are completely broken in many situations. Especially with the node graph allowing transform nodes in any position. There are a series of inconsistent hacks that work around this is certain common situations. However this isn't particularly ideal. The Instances<T> only makes this more confusing. I'm not really sure how to solve this.  Click targets are very confusingly managed. This includes the path tool without a path node. This also interacts with the transform system in ways that aren't particularly robust.  The StartBuffer thing is exceedingly confusing. Each time there is an issue involving it, several hours must be spent trying to figure out what to do about it.  The relationship where the editor updates are theoretically independent of the node graph executor is very confusing since most tools rely on the node grpah being run at least most of the time. This is especially confusing when implementing tests.  I feel like the current systems and the way they interact with the node graph is very hacky. I think it would be best to discuss the requirements for the system to figure out why we have ended up in such a mess.  ## Tools - Some tools have a confusing amount of state. For example PenToolData has 31 member variables which are only set is certain situations. This has lead to many bugs. - FSM states are inconsistent and confusing. For example the select tool fsm state for `Ready` contains the `NestedSelectionBehaviour` and the `Dragging` state contains the `has_dragged: bool` for some reason?  I feel like some of the tools need a rewrite @Keavon. However there is always a lot of random churn.  ## Inputs Rebinding inputs has been requested for a long time. However the input system has thousands of lines of macros involving many repeated things that would require a significant amount of refactoring to make a system that could be exposed to the user.  ## Translations Translations are basically impossible to implement now since there are many thousands of string literals scattered all over the code including gcore, editor, frontend svelte etc.  ## Multiple documents Having multiple documents visible at once seems to be a goal at some point. It is probably very useful for references / having a zoomed out overview etc. However we have hardcoded the active document many many times so it is basically impossible to refactor this.  ## SVG Poor integration with SVG. SVG imports are all flattened to a path rather than maintaining any structure at all. Exports end up as a mess of nested groups that is mostly unusable.  Vector editing performance is very bad with large documents (e.g. try dragging a layer in the red dress demo artwork)."
  },
  {
    "number": 2739,
    "title": "Replace Rustybuzz with Parley for text layout, and add text tilt parameter",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2739",
    "user": "BKSalman",
    "labels": [],
    "assignee": "",
    "comments_count": 12,
    "comments": [],
    "created_at": "2025-06-20T10:05:03Z",
    "updated_at": "2025-07-01T20:51:53Z",
    "closed_at": "2025-07-01T09:23:18Z",
    "milestone": "",
    "is_pull_request": true,
    "body": " related to #1105    this adds [Parley](https://github.com/linebender/parley) which handles a lot of text related stuff for us    I made this PR to get feedback on the changes    and after this is accepted, some of the listed TODOs from [this issue](https://github.com/GraphiteEditor/Graphite/issues/1105) can be resolved easily, which I could either add to this PR, or make another PR for them      I've created this [simple file](https://github.com/user-attachments/files/20854910/Arabic.test.graphite.txt) that I tested with, you can also use it (you need to use a font that supports Arabic, something like `Tajawal`)    it should look like this  ![image](https://github.com/user-attachments/assets/8ab2bbac-e6e6-4755-82cb-95af3f8be1d3)    TODOs:  - [x] Add parley  - [x] Remove rustybuzz  - [x] Migrate text node from old implementation      - [x] Change default character spacing to 0     - [x] detect the number of parameters that exist on the text node and do the migration only when it doesn't match the new number of parameters  - [x] Add shear"
  },
  {
    "number": 2738,
    "title": "[Docker] Built image and successfully ran",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/issues/2738",
    "user": "SHU-red",
    "labels": [],
    "assignee": "",
    "comments_count": 2,
    "comments": [],
    "created_at": "2025-06-19T09:34:18Z",
    "updated_at": "2025-06-19T12:23:04Z",
    "closed_at": "2025-06-19T11:59:12Z",
    "milestone": "",
    "is_pull_request": false,
    "body": "Hi there, i got graphite production successfully running - build via dockerfile - run via docker-compose  Although my implementation may not be the cleanest at the moment i wanted to ask if anyone likes me to contribute my content here?"
  },
  {
    "number": 2737,
    "title": "Remove the `serde` feature and instead just always require it",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2737",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T16:25:20Z",
    "updated_at": "2025-06-21T23:52:49Z",
    "closed_at": "2025-06-21T23:52:47Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2736    Everything needs serde anyway"
  },
  {
    "number": 2736,
    "title": "Unify feature dependencies with workspace dependencies",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2736",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T16:24:26Z",
    "updated_at": "2025-06-21T23:26:27Z",
    "closed_at": "2025-06-21T23:26:25Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2735    Every crate currently defines their own features, which means if you build or check an intermediary crate, and that one doesn't need eg. `web_sys/TextMetrics` (from `graphite-wasm`), `web_sys` will be recompiled. That including all it's dependents, like `wgpu`, `gcore` and pretty much every single crate in this repo. This makes it super annoying to build or check different crates in the tree. So I unified all features in the workspace `Cargo.toml`.    Sure, *usually* you only use `graphene-cli` or `graphite-wasm` as the main targets, but I've noticed it quite a bit. Also simplifies all active features of a crate to a single location, instead of all over the codebase. Which helps me later when I don't have to think about features when refactoring."
  },
  {
    "number": 2735,
    "title": "Bulk `gcore` cleanup, replace `core` and `alloc` with `std`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2735",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T13:28:50Z",
    "updated_at": "2025-06-21T23:08:34Z",
    "closed_at": "2025-06-21T23:08:33Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2724    This PR contains the bulk renames, for code changes see https://github.com/GraphiteEditor/Graphite/pull/2724"
  },
  {
    "number": 2734,
    "title": "Fix profiling CI action failing",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2734",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T13:08:51Z",
    "updated_at": "2025-06-20T03:23:45Z",
    "closed_at": "2025-06-18T13:17:25Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Note: Profiling Changes **is expected to fail** since the profiling ci uses the master branch to compare to, with the code error this PR corrects.    ### Investigation  Performance tests on master are broken, seems that the profile CI isn't clean and when failing, does not prevent auto-merge.  * https://github.com/GraphiteEditor/Graphite/pull/2722 deletes the \"not-so-unused\" function [`compile`](https://github.com/GraphiteEditor/Graphite/pull/2722/commits/98b0c9231505b62aecdee9e1dceea487689075e1#diff-41b76afe49f176f87361379a2ab9dcd4d648734c544b9359e3c06ac03341428aL11-L15), breaking the profile ci  * the [ci pipeline](https://github.com/GraphiteEditor/Graphite/actions/runs/15730139360/job/44329147521) **passes sucessfully** and it get's merged  * Master never runs profiling tests  * https://github.com/GraphiteEditor/Graphite/pull/2723 **fails** the [profile step](https://github.com/GraphiteEditor/Graphite/actions/runs/15732282459/job/44336035098), **gets auto-merged anyway**"
  },
  {
    "number": 2733,
    "title": "Re-export all of `gcore` in `gstd` and rename 'Image' node to 'Image Value'",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2733",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T11:20:31Z",
    "updated_at": "2025-06-20T03:24:33Z",
    "closed_at": "2025-06-19T20:58:57Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2723    code changes, for bulk renames see https://github.com/GraphiteEditor/Graphite/pull/2729    This PR and https://github.com/GraphiteEditor/Graphite/pull/2729 makes `editor` to only depend on `gstd` and removes it's dependency on `gcore`. Instead, all of `gcore` is reexported in `gstd`. This allows me to rip apart `gcore` without `editor` being affected, as long as I continue to reexport all nodes in `gstd`. Saving us a lot of conflicts down the line."
  },
  {
    "number": 2732,
    "title": "Fix 'Solidify Stroke' node not appending elements in the BezPath after the first ClosePath element",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2732",
    "user": "indierusty",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T09:25:21Z",
    "updated_at": "2025-06-18T10:13:13Z",
    "closed_at": "2025-06-18T10:10:40Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    Issue:  Previously the `AppendBezpath::append_bezpath()` method didn't append the elements after the first `ClosePath` element in the given BezPath, but the Bezpath can contain more than one path. The 'Solidify Stroke' node creates at least two paths, but the `append_bezpath` method only appends the first path, and hence 'Solidify Stroke' didn't work correctly.    Fix:  Now `AppendBezpath::append_bezpath()` appends all the paths in the given BezPath, which also fixes the 'Solidify Stroke' node.    Fixes : https://discord.com/channels/731730685944922173/1372783056632549386/1384742146241724577  "
  },
  {
    "number": 2731,
    "title": "New nodes: 'Path Length', 'Count', and 'Split Path'",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2731",
    "user": "indierusty",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-18T07:17:21Z",
    "updated_at": "2025-06-23T04:59:26Z",
    "closed_at": "2025-06-23T04:59:26Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "<!-- Please reference any relevant issue number below, optionally with a \"Closes\"/\"Resolves\"/\"Fixes\" prefix -->    New nodes:  * 'Count' : counts the number of rows in an Instances<T>  * 'Path Length' : calculate the sum of all paths lengths in all instances of VectorData.  * 'Split Path' : Splits a subpath at a certain t value.    Discord link: https://discord.com/channels/731730685944922173/881073965047636018/1384434119433261150  "
  },
  {
    "number": 2730,
    "title": "Add origin to each layer",
    "state": "open",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2730",
    "user": "mTvare6",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-18T04:01:56Z",
    "updated_at": "2025-07-04T07:36:07Z",
    "closed_at": null,
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes #2225   "
  },
  {
    "number": 2729,
    "title": "Bulk rename `gcore` -> `gstd` in editor",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2729",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 3,
    "comments": [],
    "created_at": "2025-06-17T17:48:24Z",
    "updated_at": "2025-06-20T03:24:50Z",
    "closed_at": "2025-06-19T21:13:42Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "# Requires https://github.com/GraphiteEditor/Graphite/pull/2733    bulk renames, for code changes see https://github.com/GraphiteEditor/Graphite/pull/2729    "
  },
  {
    "number": 2728,
    "title": "Put all `#[test]` in a `mod tests`",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2728",
    "user": "Firestar99",
    "labels": [],
    "assignee": "",
    "comments_count": 0,
    "comments": [],
    "created_at": "2025-06-17T17:06:49Z",
    "updated_at": "2025-06-20T03:21:51Z",
    "closed_at": "2025-06-18T09:46:01Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "bulk refactor"
  },
  {
    "number": 2727,
    "title": "Rename 'Sample Points' node to 'Sample Polyline' and add a parameter spacing based on separation or quantity",
    "state": "closed",
    "html_url": "https://github.com/GraphiteEditor/Graphite/pull/2727",
    "user": "Moharum1",
    "labels": [],
    "assignee": "",
    "comments_count": 11,
    "comments": [],
    "created_at": "2025-06-17T13:42:14Z",
    "updated_at": "2025-06-29T18:52:01Z",
    "closed_at": "2025-06-26T03:14:08Z",
    "milestone": "",
    "is_pull_request": true,
    "body": "Closes #2720  "
  }
]